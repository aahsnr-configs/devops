# .envrc

# This file enables conditional loading of Nix flake environments using direnv.
# It checks for a DEV_ENV variable to select the appropriate devShell.

# 1. Check for a local, untracked .envrc.local file and load it if it exists.
#    This is where you will set your personal DEV_ENV preference.
if [ -f .envrc.local ]; then
  source_env .envrc.local
fi

# 2. Set a default environment if DEV_ENV is not defined.
#    You can set this to "all" or "python" depending on your preference.
: ${DEV_ENV:=python}

# 3. Use a case statement to select and load the correct flake attribute.
#    This calls `nix-direnv` to build and activate the chosen shell.
log_status "Loading Flake environment: $DEV_ENV"
case "$DEV_ENV" in
"python")
  use flake .
  ;;
"cpp")
  use flake .#cpp
  ;;
"cuda")
  use flake .#cuda
  ;;
"deep-learning")
  use flake .#deep-learning
  ;;
"all")
  # This option loads the combined 'all' shell from the flake.
  use flake .#all
  ;;
*)
  log_error "Unknown DEV_ENV '$DEV_ENV'. Falling back to the default Python environment."
  use flake .
  ;;
esac
